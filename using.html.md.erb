---
title: Using Compliance Scanner
owner: Platform Security & Compliance Team
---

<strong><%= modified_date %></strong>

This topic describes how to use <%= vars.product_full %>.

<%= vars.product_short %> performs one errand that starts scanning.
When this errand is triggered, it starts the scanning errand on each VM, including the `oscap_store`
VM that the tile creates.

The scanning errand is set to `Off` by default. This is because <%= vars.product_short %> only scans
tiles that are already present when you deploy it.
If you install other tiles during the same time <%= vars.product_short %> is installed,
the additional tiles are not scanned.

The scan errand on each VM does generate the Security Content Automation Protocol (SCAP)
tests each time by running XGen on XFiles.


## <a id='scan-methods'></a> Ways to Scan VMs

You can scan VMs using the tile UI or the command line:

* When performing an audit, see [Scan Using the <%= vars.product_short %> Tile](#tile-scan).
* When setting up automated scans of your VMs, see [Scan Using the Command Line](#terminal-scan).


## <a id='tile-scan'></a> Scan Using the <%= vars.product_short %> Tile
Scanning VMs involves three procedures:

1. [Scan the VMs](#scan-vms)
1. [Retrieve Log Files](#review-tile)
1. [Find Scan Output](#scan-output)

### <a id='scan-vms'></a> Scan the VMs

To begin scanning:

1. Confirm that your scan is configured correctly with the benchmarks and log formats you want output.

    For more information about configuring your scan,
    see [Configure Scans](./installing.html#scans).

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click **REVIEW PENDING CHANGES**.

1. Enable the checkboxes for the <%= vars.product_short %> tile and the **Run configured scans** errand.

    ![Screenshot of the Compliance Scanner section on the 'Review Pending Changes' page in Ops Manager. There is a checkbox to the left of the section. The checkbox is selected. Within the section there is a dropdown for errands. At the bottom of the section, under 'Select errands to run during the deploy', the checkbox for 'Run configured scans' is selected.](images/review-pending-changes.png)

    A scan is triggered at the end.

    <p class="note"><strong>Note: </strong> If there are configuration changes
      from add-ons or tiles other than <%= vars.product_short %>, leave those
      products' and errands' checkboxes enabled if you want those changes to be applied.
     If there are no changes from other sources, only the <%= vars.product_short %>
     tile needs to have its checkbox enabled.
   </p>

1. Click **APPLY CHANGES**.

    When scanning is finished, a second errand is triggered by the `Run-config-scans-on-PAS` errand
    to retrieve the logs from each VM.
    On each VM, there is only one log file per format and one ZIP log file at a time.
    If you run any subsequent scans these files are overwritten.


### <a id='review-tile'></a>Retrieve Log Files

<p class="note"><strong>Note:</strong>  When an external store is configured, the log files do not contain
  the scan output. For instructions on accessing the scan output when an external store is configured,
  see <a href="#scan-output">Find Scan Output</a> below.
  For instructions on configuring an external store, see <a href="./installing.html#external-store">Installing and Configuring</a>.</p>

To review the logs for a completed scan using the <%= vars.product_short %> tile:

1. When the changes have been applied, return to the Installation Dashboard
   and click the <%= vars.product_short %> tile.
<br><br>
    ![Screenshot of the dialog shown when Apply Changes has finished. The text in the dialog box reads, 'Changes Applied. Your changes were successfully applied. We recommend that you export a backup of this installation from the actions menu.' Below the text is a 'Close' button and the 'Return to dashboard' button.](images/changes-applied.png)

1. Click **Status** and download the `oscap_store` log file.
<br><br>
    This downloads the log file containing scan results from the `oscap_store` VM to <%= vars.ops_manager %>.
    If you select the download icon multiple times, a list of ZIP files is created in <%= vars.ops_manager %>,
    each with a different timestamp.

1. Click **Logs** and click the filename of the ZIP log file.
<br><br>
    This downloads the scan results from the <%= vars.ops_manager %> to your local machine.
    The timestamp indicates when the scan was initiated.

	  ![Screenshot of the logs tab in the Compliance Scanner tile. Under 'Downloaded' there is a link to download a zipped file for a scan log. There is a timestamp to the right of the link.](images/download-logs.png)
    <a href="./images/download-logs.png" target="_blank" aria-hidden="true">Click here to view a larger version of the image above</a>

1. Decompress the downloaded file.
<br><br>
    The contents of the downloaded file depend on the formats and benchmarks you selected during
    configuration.
    For example, a report in HTML format from the Base Xenial benchmark, might look like this.

    ![Screenshot of an example scan log. At the top is the heading 'Guide to the Secure Configuration of Ubuntu stemcell'. Below is a table titled Evaluation Characteristics. The table has two columns, one for the item name and one for the value. The items listed are: 'Tile version', 'Deployment name', 'Evaluation target', 'Benchmark URL', 'Benchmark ID', 'Profile ID', 'Started at', 'Finished at', 'Performed by'. To the right of the table there is a list of CPE platforms and a list of IP and MAC addresses.](images/sample-html-output.png)

    <a href="base_xenial_sample.html" target="_blank" aria-hidden="true">Click here to view a complete example log</a>

### <a id='scan-output'></a> Find Scan Output

The method of finding the scan output depends on whether or not an external store is configured for scan results.
For instructions on configuring an external store, see <a href="./installing.html#external-store">Installing and Configuring</a>.

  * Find scan output if using an external store:

    * Scan output is uploaded to the external store as an archive.
    * The scan output filename contains the timestamp of the scan and takes the form
    <code>compliance\_scanner\_YYYY-MM-DDTHHMMSS.tar.gz</code>.
    * To retrieve the scan results, download and extract this archive.

  * Find scan output if not using an external store:

    * The `oscap_store` ZIP file contains scan results from the `oscap_store` VM.
    * The results of the scan are at `oscap_store/scanner/scan_results/output`.

  The naming syntax for each log file is below:

  ```
  BENCHMARK_COMPONENT_UUID.FORMAT
  ```

  Where:

  + `BENCHMARK` is the benchmark that was used for the scan.
  + `COMPONENT` is the VM that was scanned.
  + `UUID` is the UUID for the VM that was scanned.
  + `FORMAT` is the format of the file and is one of the formats that you configured
  in [Configure Scans](./installing.html#scans).

  For example, the `oscap_store` directory looks similar to the following image:

  ![Diagram of an example oscap_store file structure. The output directory contains two scan log files. The output directory is within the scan results directory, which is within the oscap_store directory.](images/oscap_store.png)

<!-- If you need to edit the above image you need to edit the corresponding
oscap_store.html file in draw.io and then export the image to a png file. -->

The number of log files in the `output` directory can be calculated as follows:

  ```
  (v + i) * f * b
  ```

  Where:

  + `v` is the number of VMs in your deployment.
  + `i` is the number of additional instances for any VM in your deployment.
  + `f` is the number of formats you configured in [Configure Scans](./installing.html#scans).
  + `b` is the number of benchmarks you configured in [Configure Scans](./installing.html#scans).


## <a id='terminal-scan'></a>Scan Using the Command Line

<p class="note"><strong>Note:</strong>  When an external store is configured, the log files do not contain
  the scan output. For instructions on accessing the scan output when an external store is configured,
  see <a href="#scan-output">Find Scan Output</a> above.
  For instructions on configuring an external store, see <a href="./installing.html#external-store">Installing and Configuring</a>.</p>

You also have the option of scanning VMs through the CLI.
There are two ways to do this:

* [Scan and Retrieve Log Files](#scan-retrieve-logs)
* [Retrieve Existing Log Files](#retrieve-only-logs)


### <a id='scan-retrieve-logs'></a>Scan and Retrieve Log Files

To start a new scan and retrieve the logs for the completed scan using the CLI:

1. Log in to the BOSH Director.
    1. On the <%= vars.ops_manager %> VM, create an alias in the BOSH CLI for your BOSH Director IP address. For example:
    <pre class="terminal">$ bosh alias-env my-env -e 10.0.0.3</pre>
    1. Log in to the BOSH Director, specifying the newly created alias.  For example:
    <pre class="terminal">$ bosh -e my-env log-in</pre>

1. Run `bosh deployments` to list all the deployment names.
  For example:

  <pre class="terminal">
  Name                      Releases                    Stemcells
  container-service backup-and-restore-sdk/1.8.0  bosh-google-kvm-ubuntu-xenial-go\_agent/97.47   -
                              bosh-dns/1.10.0
                              bosh-dns-aliases/0.0.3
                              bpm/0.6.0
                              cf-mysql/36.14.0
                              docker/32.0.3
                              kubo/0.21.13
                              kubo-service-adapter/1.2.5
                              oscap/0.1.61
                              pks-telemetry/0.9.4
  scanner-f9822a33c2e0d04cb bosh-dns/1.10.0               bosh-google-kvm-ubuntu-xenial-go\_agent/170.19  -
                              bosh-dns-aliases/0.0.3
                              clamav/1.4.41
                              ipsec/1.9.14
                              ipsec-verifier/1.9.14
                              oscap/0.1.61
  service-instance          bosh-dns/1.10.0               bosh-google-kvm-ubuntu-xenial-go\_agent/97.47
                              bosh-dns-aliases/0.0.3        container-service
                              bpm/0.6.0
                              cfcr-etcd/1.4.1
                              kubo/0.21.13
  </pre>

1. Find the `scanner` deployment in the list.
  It appears as `scanner-DEPLOYMENT-UUID`, where `DEPLOYMENT-UUID` is the UUID of your deployment.
1. Run the following command to start the scan and download the logs:

    ```
    bosh -e my-env -d scanner-DEPLOYMENT-UUID run-errand scan_results --download-logs --logs-dir PATH-TO-SAVE-SCAN-RESULTS
    ```

    Where:
    * `scanner-DEPLOYMENT-UUID` is the name of your scanner deployment.
    * `PATH-TO-SAVE-SCAN-RESULTS` is the directory where you want to save the logs.
    You can omit `--logs-dir PATH-TO-SAVE-SCAN-RESULTS` if you want the logs to be saved to your current directory.

    For example:
    <pre class="terminal">$ bosh -e my-env -d scanner-f9822a33c2e0d04cb run-errand scan_results --download-logs --logs-dir scanner/logs/20190131</pre>

    <p class="note"><strong>Note:</strong>
    The files generated use the most recent configuration of your tile.
    To see what the current settings are, see <a href="./installing.html#scans">Configure Scans</a>.</p>


### <a id='retrieve-only-logs'></a>Retrieve Existing Log Files

To retrieve existing logs for the most recent completed scan using the CLI, run:

  ```
  bosh -e my-env -d scanner-DEPLOYMENT-UUID logs --only=scan_results --dir PATH-TO-SAVE-SCAN-RESULTS
  ```
  Where:

  * `scanner-DEPLOYMENT-UUID` is the name of your scanner deployment.
  * `PATH-TO-SAVE-SCAN-RESULTS` is the directory in which you save your logs.
  Omit `--dir PATH-TO-SAVE-SCAN-RESULTS` to save the logs to your current directory.

  For example:
  <pre class="terminal">bosh -e my-env -d scanner-f9822a33c2e0d04cb logs --only=scan_results --dir scanner/logs/20190131</pre>


### <a id='access-logs'></a>Access Log Files
To access your saved logs, unzip the output ZIP file.

The naming syntax for each log file is below:

  ```
  BENCHMARK_COMPONENT_UUID.FORMAT
  ```
  Where:

  * `BENCHMARK` is the benchmark that was used for the scan.
  * `COMPONENT` is the VM that was scanned.
  * `UUID` is the UUID for the VM that was scanned.
  * `FORMAT` is the format of the file and is one of the formats that you configured
  in [Configure Scans](./installing.html#scans).

  For example, the `output` directory looks similar to the following image:

  ![Diagram of an example output directory structure. Two scan log files are within the output directory.](images/command_line_output.png)


<!-- Put below "View Tests on VMs" section in a "Reporting" page in the future -->
## <a id='tests'></a> View Tests on VMs

For every configuration rule that is checked, there is a corresponding test written in YAML test
files residing on each VM.
You can use these files as reference for internal test development or to validate that the test
matches the description.

In the beta release of <%= vars.product_short %>,
you cannot write your own YAML tests or convert these tests to the SCAP format.

To view tests on VMs:

1. Use the BOSH CLI to SSH into a component VM. For more information,
see [BOSH SSH](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#bosh-ssh).
1. Navigate to the following path:

    ```
    /var/vcap/packages/oscap/xfiles
    ```

1. Search for the test ID and open the corresponding file.

## <a id="cancel-scan"></a> Cancel a Running Scan

To cancel a running scan:

1. Log in to the BOSH Director.
    1. On the <%= vars.ops_manager %> VM, create an alias in the BOSH CLI for your BOSH Director IP address:
    <pre><code>$ bosh alias-env ENVIRONMENT-ALIAS -e IP-ADDRESS</code></pre> <%# do you have to create an alias every time you log in to the bosh director %>
    For example:
    <pre class="terminal">$ bosh alias-env my-env -e 10.0.0.3</pre>
    1. Log in to the BOSH Director, specifying the newly created alias:
    <pre><code>$ bosh -e ENVIRONMENT-ALIAS log-in</code></pre>
    For example:
    <pre class="terminal">$ bosh -e my-env log-in</pre>

1. Get the task ID of the `scan_results` errand by running:

    ```
    bosh -e ENVIRONMENT-ALIAS tasks
    ```

    For example:

    <pre class="terminal">
    $ bosh -e my-env tasks

    ID  State       Started At                    Last Activity At              User   Deployment    Description                                            Result
    65  processing  Fri Sep  6 19:06:53 UTC 2019  Thu Jan  1 00:00:00 UTC 1970  admin  my-deployment run errand scan_results from deployment my-deployment  -

    1 tasks
    </pre>

    In this example, the task ID is `65`.

    <p class="note"><strong>Note: </strong> If you started the scan using the command line as described in
      <a href="#terminal-scan">Scan Using the Command Line</a>, you can press <code>CTRL + C</code>
      while the scan is running to stop waiting for the scan to complete.
      This does not cancel the scan, but allows you to issue new commands through the CLI.
    </p>

1. Cancel the `scan_results` errand by running:

    ```
    bosh -e ENVIRONMENT-ALIAS cancel-task TASK-ID
    ```

    For example:
    <pre class="terminal">
    $ bosh -e my-env cancel-task 65
    Using environment '10.0.0.5' as client 'ops_manager'

    Succeeded
    </pre>


### <a id="interpret-scan"></a> Errand Logs After Cancelling a Scan

After running the BOSH `cancel-task` command, the `scan_results` errand outputs
`Received signal terminated`, and attempts to cancel the scan on every VM. When a VM
receives the cancel message, it terminates the running scan process.

After the scan has cancelled, the `store.log` file in the output directory will
look similar to the example below:

<pre class="terminal">
2019/09/06 19:06:54 Starting store on port 28894
2019/09/06 19:06:54 [10.0.0.12 10.0.0.11 10.0.0.9 10.0.0.10] &lt;nil&gt;
2019/09/06 19:06:54 Starting scan on 10.0.0.12
2019/09/06 19:06:54 Starting scan on 10.0.0.11
2019/09/06 19:06:54 Starting scan on 10.0.0.9
2019/09/06 19:06:54 Starting scan on 10.0.0.10
2019/09/06 19:06:59 Received signal terminated
2019/09/06 19:06:59 Attempting to cancel scan on host 10.0.0.10
2019/09/06 19:06:59 Attempting to cancel scan on host 10.0.0.12
2019/09/06 19:06:59 Attempting to cancel scan on host 10.0.0.11
2019/09/06 19:06:59 Attempting to cancel scan on host 10.0.0.9
2019/09/06 19:06:59 Host 10.0.0.10 successfully acknowledged cancel request
2019/09/06 19:06:59 Host 10.0.0.12 successfully acknowledged cancel request
2019/09/06 19:06:59 Host 10.0.0.11 successfully acknowledged cancel request
2019/09/06 19:06:59 Host 10.0.0.9 successfully acknowledged cancel request
2019/09/06 19:06:59 Shutdown
</pre>

To retrieve the errand log, see [Retrieve Existing Log Files](#retrieve-only-logs).

<p class="note"><strong>Note: </strong> The errand log can also be found at the path
  <code>/var/vcap/sys/log/scan_results/store.log</code> on the store VM.</p>

<br>
If you started the scan using <%= vars.ops_manager %>, you can view the log output for the
`scan_results` errand in <%= vars.ops_manager %>. <%# is this correct? %>

After the scan has cancelled, the <%= vars.ops_manager %> log output for the errand will look
similar to the example below:

<pre class="terminal">
Task 65 | 19:06:53 | Preparing deployment: Preparing deployment (00:00:01)
Task 65 | 19:06:54 | Running errand: oscap-store/fa844bb0-5739-497a-a3db-f96a86a3dc2a (0) (00:00:05)
                  L Error: Task 65 cancelled
Task 65 | 19:07:00 | Fetching logs for oscap-store/fa844bb0-5739-497a-a3db-f96a86a3dc2a (0): Finding and packing log files (00:00:01)
Task 65 | 19:07:01 | Error: Task 65 cancelled

Task 65 Started  Fri Sep  6 19:06:53 UTC 2019
Task 65 Finished Fri Sep  6 19:07:01 UTC 2019
Task 65 Duration 00:00:08
Task 65 cancelled

Running errand 'scan_results':
 Expected task '65' to succeed but state is 'cancelled'

Exit code 1
</pre>
